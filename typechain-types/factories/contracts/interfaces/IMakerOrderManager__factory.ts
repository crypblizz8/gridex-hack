/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IMakerOrderManager,
  IMakerOrderManagerInterface,
} from "../../../contracts/interfaces/IMakerOrderManager";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenA",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenB",
            type: "address",
          },
          {
            internalType: "int24",
            name: "resolution",
            type: "int24",
          },
          {
            internalType: "uint160",
            name: "priceX96",
            type: "uint160",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            components: [
              {
                internalType: "int24",
                name: "boundaryLower",
                type: "int24",
              },
              {
                internalType: "uint128",
                name: "amount",
                type: "uint128",
              },
            ],
            internalType:
              "struct IGridParameters.BoundaryLowerWithAmountParameters[]",
            name: "orders0",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "int24",
                name: "boundaryLower",
                type: "int24",
              },
              {
                internalType: "uint128",
                name: "amount",
                type: "uint128",
              },
            ],
            internalType:
              "struct IGridParameters.BoundaryLowerWithAmountParameters[]",
            name: "orders1",
            type: "tuple[]",
          },
        ],
        internalType: "struct IMakerOrderManager.InitializeParameters",
        name: "initializeParameters",
        type: "tuple",
      },
    ],
    name: "createGridAndInitialize",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "gridFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenA",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenB",
            type: "address",
          },
          {
            internalType: "int24",
            name: "resolution",
            type: "int24",
          },
          {
            internalType: "uint160",
            name: "priceX96",
            type: "uint160",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            components: [
              {
                internalType: "int24",
                name: "boundaryLower",
                type: "int24",
              },
              {
                internalType: "uint128",
                name: "amount",
                type: "uint128",
              },
            ],
            internalType:
              "struct IGridParameters.BoundaryLowerWithAmountParameters[]",
            name: "orders0",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "int24",
                name: "boundaryLower",
                type: "int24",
              },
              {
                internalType: "uint128",
                name: "amount",
                type: "uint128",
              },
            ],
            internalType:
              "struct IGridParameters.BoundaryLowerWithAmountParameters[]",
            name: "orders1",
            type: "tuple[]",
          },
        ],
        internalType: "struct IMakerOrderManager.InitializeParameters",
        name: "initializeParameters",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenA",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenB",
            type: "address",
          },
          {
            internalType: "int24",
            name: "resolution",
            type: "int24",
          },
          {
            internalType: "bool",
            name: "zero",
            type: "bool",
          },
          {
            internalType: "int24",
            name: "boundaryLower",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "amount",
            type: "uint128",
          },
        ],
        internalType: "struct IMakerOrderManager.PlaceOrderParameters",
        name: "parameters",
        type: "tuple",
      },
    ],
    name: "placeMakerOrder",
    outputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenA",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenB",
            type: "address",
          },
          {
            internalType: "int24",
            name: "resolution",
            type: "int24",
          },
          {
            internalType: "bool",
            name: "zero",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "int24",
                name: "boundaryLower",
                type: "int24",
              },
              {
                internalType: "uint128",
                name: "amount",
                type: "uint128",
              },
            ],
            internalType:
              "struct IGridParameters.BoundaryLowerWithAmountParameters[]",
            name: "orders",
            type: "tuple[]",
          },
        ],
        internalType: "struct IMakerOrderManager.PlaceOrderInBatchParameters",
        name: "parameters",
        type: "tuple",
      },
    ],
    name: "placeMakerOrderInBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "orderIds",
        type: "uint256[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenA",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenB",
            type: "address",
          },
          {
            internalType: "int24",
            name: "resolution",
            type: "int24",
          },
          {
            internalType: "bool",
            name: "zero",
            type: "bool",
          },
          {
            internalType: "uint128",
            name: "amount",
            type: "uint128",
          },
          {
            internalType: "int160",
            name: "priceDeltaX96",
            type: "int160",
          },
          {
            internalType: "uint160",
            name: "priceMinimumX96",
            type: "uint160",
          },
          {
            internalType: "uint160",
            name: "priceMaximumX96",
            type: "uint160",
          },
        ],
        internalType: "struct IMakerOrderManager.RelativeOrderParameters",
        name: "parameters",
        type: "tuple",
      },
    ],
    name: "placeRelativeOrder",
    outputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
] as const;

export class IMakerOrderManager__factory {
  static readonly abi = _abi;
  static createInterface(): IMakerOrderManagerInterface {
    return new utils.Interface(_abi) as IMakerOrderManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IMakerOrderManager {
    return new Contract(address, _abi, signerOrProvider) as IMakerOrderManager;
  }
}
